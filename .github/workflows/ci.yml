name: CI
on:
  push:
    branches: [ master ]
#[push, pull_request]

jobs:
  linux:
    strategy:
      matrix:
        version: [20.04, 22.04]
    runs-on: ubuntu-${{ matrix.version }}
    steps:
      - name: Install libfdk-aac
        run: |
          sudo apt install libfdk-aac-dev
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Build
        run: |
          autoreconf -fiv
          ./configure
          make -j2
          sudo make install
      - name: Test
        run: |
          fdkaac -b 128 -R -o /dev/null /dev/null

  mingw-cross:
    strategy:
      matrix:
        arch: [i686, x86_64]
        include:
          - arch: i686
            os: mingw32
          - arch: x86_64
            os: mingw64
    runs-on: ubuntu-latest
    steps:
      - name: Install cross compiler
        run: |
          ARCH=${{ matrix.arch }}
          sudo apt-get install g++-mingw-w64-${ARCH//_/-}
      - name: Install libfdk-aac binary from repo.msys.org
        run: |
          wget https://repo.msys2.org/mingw/${{ matrix.os }}/${{ matrix.os }}.db.tar.zst
          DESCFILE=$(tar xvf ${{ matrix.os }}.db.tar.zst --wildcards '*-fdk-aac*/desc')
          PKGFILE=$(sed -n '/%FILENAME%/{n;p;q}' $DESCFILE)
          wget https://repo.msys2.org/mingw/${{ matrix.os }}/${PKGFILE}
          sudo tar xvf ${PKGFILE} -C /usr/${{ matrix.arch }}-w64-mingw32 --strip-component=1
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          autoreconf -fiv
          ./configure --host=${{ matrix.arch }}-w64-mingw32 --prefix=/usr/${{ matrix.arch }}-w64-mingw32
          make -j2
          sudo make install

  macos:
    runs-on: macos-latest
    steps:
      - name: Install dependencies
        run: |
          brew install autoconf automake libtool pkg-config
          brew install fdk-aac
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Build
        run: |
          autoreconf -fiv
          ./configure
          make -j3
          make install
      - name: Test
        run: |
          fdkaac -b 128 -R -o /dev/null /dev/null

  msys2:
    runs-on: windows-latest
    strategy:
      matrix:
        sys: [ clang32, clang64, mingw32, mingw64, ucrt64 ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          update: true
          install: git
          pacboy: >-
            autoconf:
            automake:
            libtool:
            make:
            cc:p
            pkg-config:p
            fdk-aac:p
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          autoreconf -fiv
          ./configure
          make -j2
          make install
      - name: Test
        run: |
          fdkaac -b 128 -R -o /dev/null /dev/null

           - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

